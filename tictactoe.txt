#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

vector<int> arr;
int counter = 0;
int counter1 = 0;
char square[10] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
void prettyPrint() {
  cout << square[0] << "|";
  cout << square[1] << "|";
  cout << square[2] << endl;
  cout << "------" << endl;
  cout << square[3] << "|";
  cout << square[4] << "|";
  cout << square[5] << endl;
  cout << "------" << endl;
  cout << square[6] << "|";
  cout << square[7] << "|";
  cout << square[8] << endl;
  cout << endl;
}
bool winRow(char s[], int i) {
  if (s[i] == s[i + 1] && s[i] == s[i + 2]) {
    return true;
  } else {
    return false;
  }
}
bool winColumn(char s[], int i) {
  if (s[i] == s[i + 3] && s[i] == s[i + 6]) {
    return true;
  } else {
    return false;
  }
}
bool winDiagonal(char s[], int i) {
  if (s[i] == s[i + 4] && s[i] == s[i + 8]) {
    return true;
  } else if (s[i] == s[i + 2] && s[i] == s[i + 4]) {
    return true;
  } else {
    return false;
  }
}

int main() {
  int num, num1;
  prettyPrint();
  while ((!winRow(square, 0) && !winRow(square, 3) && !winRow(square, 6)) &&
         (!winColumn(square, 0) && !winColumn(square, 1) &&
          !winColumn(square, 2) && !winDiagonal(square, 0) &&
          !winDiagonal(square, 2))) {
    cout << "Player 1: ";
    cin >> num;
    counter++;
    arr.insert(arr.begin(), num);
    square[num] = 'X';
    prettyPrint();
    if (winRow(square, 0) || winRow(square, 3) || winRow(square, 6) ||
        winColumn(square, 0) || winColumn(square, 1) || winColumn(square, 2) ||
        winDiagonal(square, 0) || winDiagonal(square, 2)) {
      break;
    }
    num1 = rand() % 9;
    auto finder = find(arr.begin(), arr.end(), num1);
    while (finder != arr.end()) {
      num1 = rand() % 9;
      finder = find(arr.begin(), arr.end(), num1);
    }
    cout << "Player 2: " << num1 << endl;
    counter1++;
    cout << endl;
    arr.insert(arr.begin(), num1);
    square[num1] = 'O';
    prettyPrint();
    if (winRow(square, 0) || winRow(square, 3) || winRow(square, 6) ||
        winColumn(square, 0) || winColumn(square, 1) || winColumn(square, 2) ||
        winDiagonal(square, 0) || winDiagonal(square, 2)) {
      break;
    }
  }
  if (counter > counter1) {
    cout << "Player 1 wins!";
  } else if (counter1 > counter) {
    cout << "Player 2 wins!";
  } else {
    cout << "Tie";
  }
  return 0;
}